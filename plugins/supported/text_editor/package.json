{
    "description": "Canvas-based text editor component and many common editing commands",
    "dependencies":
    {
        "appsupport": "0.0",
        "canon": "0.0",
        "delegate_support": "0.0",
        "rangeutils": "0.0",
        "settings": "0.0",
        "syntax_manager" : "0.0"
    },
    "provides":
    [
        {
            "ep": "command",
            "name": "backspace",
            "key": "backspace",
            "predicates": { "isTextView": true },
            "pointer": "commands/editing#backspace"
        },
        {
            "ep": "command",
            "name": "delete",
            "key": "delete",
            "predicates": { "isTextView": true },
            "pointer": "commands/editing#deleet"
        },
        {
            "ep": "command",
            "name": "newline",
            "key": "return",
            "predicates": { "isTextView": true },
            "pointer": "commands/editing#newline"
        },
        {
            "ep": "command",
            "name": "tab",
            "key": "tab",
            "predicates": { "isTextView": true },
            "pointer": "commands/editing#tab"
        },
        {
            "ep": "command",
            "name": "move",
            "predicates": {"isTextView": true}
        },
        {
            "ep": "command",
            "name": "move down",
            "key": "down",
            "predicates": {"isTextView": true},
            "pointer": "commands/movement#moveDown"
        },
        {
            "ep": "command",
            "name": "move left",
            "key": "left",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveLeft"
        },
        {
            "ep": "command",
            "name": "move right",
            "key": "right",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveRight"
        },
        {
            "ep": "command",
            "name": "move up",
            "key": "up",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveUp"
        },
        {
            "ep": "command",
            "name": "select",
            "predicates": { "isTextView": true }
        },
        {
            "ep": "command",
            "name": "select down",
            "key": "shift_down",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectDown"
        },
        {
            "ep": "command",
            "name": "select left",
            "key": "shift_left",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectLeft"
        },
        {
            "ep": "command",
            "name": "select right",
            "key": "shift_right",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectRight"
        },
        {
            "ep": "command",
            "name": "select up",
            "key": "shift_up",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectUp"
        },
        {
            "ep": "command",
            "name": "move lineend",
            "key": ["end", "ctrl_right"],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveLineEnd"
        },
        {
            "ep": "command",
            "name": "select lineend",
            "key": ["shift_end", "ctrl_shift_right"],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectLineEnd"
        },
        {
            "ep": "command",
            "name": "move docend",
            "key": "ctrl_down",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveDocEnd"
        },
        {
            "ep": "command",
            "name": "select docend",
            "key": "ctrl_shift_down",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectDocEnd"
        },
        {
            "ep": "command",
            "name": "move linestart",
            "key": ["home", "ctrl_left"],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveLineStart"
        },
        {
            "ep": "command",
            "name": "select linestart",
            "key": ["shift_home", "ctrl_shift_left"],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectLineStart"
        },
        {
            "ep": "command",
            "name": "move docstart",
            "key": "ctrl_up",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveDocStart"
        },
        {
            "ep": "command",
            "name": "select docstart",
            "key": "ctrl_shift_up",
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectDocStart"
        },
        {
            "ep": "command",
            "name": "move nextword",
            "key": [ "alt_right" ],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#moveNextWord"
        },
        {
            "ep": "command",
            "name": "select nextword",
            "key": [ "alt_shift_right" ],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectNextWord"
        },
        {
            "ep": "command",
            "name": "move prevword",
            "key": [ "alt_left" ],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#movePreviousWord"
        },
        {
            "ep": "command",
            "name": "select prevword",
            "key": [ "alt_shift_left" ],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectPreviousWord"
        },
        {
            "ep": "command",
            "name": "select all",
            "key": [ "ctrl_a", "meta_a" ],
            "predicates": { "isTextView": true },
            "pointer": "commands/movement#selectAll"
        },
        {
            "ep": "command",
            "name": "scroll",
            "predicates": { "isTextView": true }
        },
        {
            "ep": "command",
            "name": "scroll start",
            "key": "ctrl_home",
            "predicates": { "isTextView": true },
            "pointer": "commands/scrolling#scrollDocStart"
        },
        {
            "ep": "command",
            "name": "scroll end",
            "key": "ctrl_end",
            "predicates": { "isTextView": true },
            "pointer": "commands/scrolling#scrollDocEnd"
        },
        {
            "ep": "command",
            "name": "scroll down",
            "key": "pagedown",
            "predicates": { "isTextView": true },
            "pointer": "commands/scrolling#scrollPageDown"
        },
        {
            "ep": "command",
            "name": "scroll up",
            "key": "pageup",
            "predicates": { "isTextView": true },
            "pointer": "commands/scrolling#scrollPageUp"
        },
        {
            "ep": "command",
            "name": "lc",
            "description": "Change all selected text to lowercase",
            "withKey": "CMD SHIFT L",
            "pointer": "commands/editor#lcCommand"
        },
        {
            "ep": "command",
            "name": "detab",
            "params":
            [
                {
                    "name": "tabsize",
                    "type": "text",
                    "description": "Optionally, specify a tab size. (Defaults to setting.)",
                    "defaultValue": null
                }
            ],
            "description": "Convert tabs to spaces.",
            "pointer": "commands/editor#detabCommand"
        },
        {
            "ep": "command",
            "name": "entab",
            "params":
            [
                {
                    "name": "tabsize",
                    "type": "text",
                    "description": "Optionally, specify a tab size. (Defaults to setting.)",
                    "defaultValue": null
                }
            ],
            "description": "Convert spaces to tabs.",
            "pointer": "commands/editor#entabCommand"
        },
        {
            "ep": "command",
            "name": "goto",
            "params":
            [
                {
                    "name": "line",
                    "type": "text",
                    "description": "add the line number to move to in the file"
                }
            ],
            "description": "move it! make the editor head to a line number.",
            "pointer": "commands/editor#gotoCommand"
        },
        {
            "ep": "command",
            "name": "trim",
            "params":
            [
                {
                    "name": "side" ,
                    "type":
                    {
                        "name": "selection",
                        "data": [ {"name": "left"}, {"name":"right"}, {"name": "both"} ]
                    },
                    "description": "Do we trim from the left, right or both",
                    "defaultValue": "both"
                }
            ],
            "description": "trim trailing or leading whitespace from each line in selection",
            "pointer": "commands/editor#trimCommand"
        },
        {
            "ep": "command",
            "name": "uc",
            "description": "Change all selected text to uppercase",
            "withKey": "CMD SHIFT U",
            "pointer": "commands/editor#ucCommand"
        },
        {
            "ep": "setting",
            "name": "tabstop",
            "description": "The distance in characters between each tab",
            "type": "number",
            "defaultValue": 8
        },
        {
            "ep": "setting",
            "name": "customKeymapping",
            "description": "Customize the keymapping",
            "type": "text",
            "defaultValue": "{}"
        },
        {
            "ep": "setting",
            "name": "keymapping",
            "description": "The keymapping to use",
            "type": "text",
            "defaultValue": "standard"
        }
    ]
}
