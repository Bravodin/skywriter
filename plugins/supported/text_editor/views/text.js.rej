--- text.js
+++ text.js
@@ -49,19 +49,16 @@ var settings = require('settings').setti
 // when optimizing syntax highlighting engines.
 var DEBUG_TEXT_RANGES = false;


 exports.TextView = function(container, editor) {
     CanvasView.call(this, container, true /* preventDownsize */ );
     this.editor = editor;

-    // Call this to attach the necessary events for a new buffer.
-    this.editorWillChangeBuffer(editor.buffer);
-
     // Takes the layoutManager of the editor and uses it.
     var textInput = this.textInput = new TextInput(container, this);

     this.padding = {
         top: 0,
         bottom: 30,
         left: 0,
         right: 30
@@ -109,20 +106,22 @@ util.mixin(exports.TextView.prototype, {

     selectionChanged: null,
     beganChangeGroup: null,
     endedChangeGroup: null,
     willReplaceRange: null,
     replacedCharacters: null,

     editorWillChangeBuffer: function(newBuffer) {
-        // Remove events from the old layoutManager.
-        var layoutManager = this.editor.layoutManager;
-        layoutManager.invalidatedRects.remove(this);
-        layoutManager.changedTextAtRow.remove(this);
+        if (this.editor.layoutManager) {
+            // Remove events from the old layoutManager.
+            var layoutManager = this.editor.layoutManager;
+            layoutManager.invalidatedRects.remove(this);
+            layoutManager.changedTextAtRow.remove(this);
+        }

         // Add the events to the new layoutManager.
         layoutManager = newBuffer.layoutManager;
         layoutManager.invalidatedRects.add(this,
                                 this.layoutManagerInvalidatedRects.bind(this));
         layoutManager.changedTextAtRow.add(this,
                                 this.layoutManagerChangedTextAtRow.bind(this));
     },
